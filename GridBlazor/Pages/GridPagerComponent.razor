@using GridShared.Pagination
@using GridBlazor.Resources
@typeparam T

<div class="grid-pager-sizer">
    @if (GridComponent.Grid.Pager != null && GridComponent.Grid.Pager.PageCount > 1)
    {
        <nav class="grid-pager @GridComponent.Grid.HtmlClass.PaginationNav">
            <ul class="@GridComponent.Grid.HtmlClass.PaginationList">
                @if (GridComponent.Grid.Pager.CurrentPage > 1)
                {
                    <li class="grid-page-item @GridComponent.Grid.HtmlClass.PageItem">
                        <button type="button" class="grid-page-link @GridComponent.Grid.HtmlClass.PageLink" @onclick="() => PagerButtonClicked(GridComponent.Grid.Pager.CurrentPage - 1)">«</button>
                    </li>
                }
                @if (GridComponent.Grid.Pager.StartDisplayedPage > 1)
                {
                    <li class="grid-page-item @GridComponent.Grid.HtmlClass.PageItem">
                        <button type="button" class="grid-page-link @GridComponent.Grid.HtmlClass.PageLink" @onclick="() => PagerButtonClicked(1)">1</button>
                    </li>
                    @if (GridComponent.Grid.Pager.StartDisplayedPage > 2)
                    {
                        <li class="grid-page-item @GridComponent.Grid.HtmlClass.PageItem">
                            <button type="button" class="grid-page-link @GridComponent.Grid.HtmlClass.PageLink" @onclick="() => PagerButtonClicked(GridComponent.Grid.Pager.StartDisplayedPage - 1)">...</button>
                        </li>
                    }
                }
                @for (int i = GridComponent.Grid.Pager.StartDisplayedPage; i <= GridComponent.Grid.Pager.EndDisplayedPage; i++)
                {
                    if (i == GridComponent.Grid.Pager.CurrentPage)
                    {
                        <li class="grid-page-item @GridComponent.Grid.HtmlClass.PageItem @GridComponent.Grid.HtmlClass.PageItemActive">
                            <button type="button" class="grid-page-link @GridComponent.Grid.HtmlClass.PageLink @GridComponent.Grid.HtmlClass.PageLinkActive">@i</button>
                        </li>
                    }
                    else
                    {
                        int j = i;
                        <li class="grid-page-item @GridComponent.Grid.HtmlClass.PageItem">
                            <button type="button" class="grid-page-link @GridComponent.Grid.HtmlClass.PageLink" @onclick="async () => await PagerButtonClicked(j)">@j</button>
                        </li>
                    }
                }
                @if (GridComponent.Grid.Pager.EndDisplayedPage < GridComponent.Grid.Pager.PageCount)
                {
                    if (GridComponent.Grid.Pager.EndDisplayedPage < GridComponent.Grid.Pager.PageCount - 1)
                    {
                        <li class="grid-page-item @GridComponent.Grid.HtmlClass.PageItem">
                            <button type="button" class="grid-page-link @GridComponent.Grid.HtmlClass.PageLink" @onclick="async () => await PagerButtonClicked(GridComponent.Grid.Pager.EndDisplayedPage + 1)">...</button>
                        </li>
                    }
                    <li class="grid-page-item @GridComponent.Grid.HtmlClass.PageItem">
                        <button type="button" class="grid-page-link @GridComponent.Grid.HtmlClass.PageLink" @onclick="async () => await PagerButtonClicked(GridComponent.Grid.Pager.PageCount)">@GridComponent.Grid.Pager.PageCount</button>
                    </li>
                }
                @if (GridComponent.Grid.Pager.CurrentPage < GridComponent.Grid.Pager.PageCount)
                {
                    <li class="grid-page-item @GridComponent.Grid.HtmlClass.PageItem">
                        <button type="button" class="grid-page-link @GridComponent.Grid.HtmlClass.PageLink" @onclick="async () => await PagerButtonClicked(GridComponent.Grid.Pager.CurrentPage + 1)">»</button>
                    </li>
                }
            </ul>
        </nav>

        @if (GridComponent.Grid.Pager.GoToVisibility)
        {
            <div class="grid-goto-page @GridComponent.Grid.HtmlClass.FooterRow">
                <label class="@GridComponent.Grid.HtmlClass.FormLabel">@Strings.Goto</label>
                <div class="@GridComponent.Grid.HtmlClass.FormDivInput">
                    <input class="@GridComponent.Grid.HtmlClass.PageInput grid-goto-page-input" @bind="_currentPage" @onkeyup="GoToKeyup" @onblur="GoToBlur" @onclick:stopPropagation />
                </div>
            </div>
        }
    }

    @if (GridComponent.Grid.PagingType == PagingType.Pagination && GridComponent.Grid.Pager.ChangePageSize)
    {
        <div class="grid-change-page-size @GridComponent.Grid.HtmlClass.FooterRow" data-change-page-size-url="@GridComponent.ChangePageSizeUrl">
            <label class="@GridComponent.Grid.HtmlClass.FormLabel">@Strings.Show</label>
            <div class="@GridComponent.Grid.HtmlClass.FormDivInput">
                <input @ref="GridComponent.PageSizeInput" class="@GridComponent.Grid.HtmlClass.PageInput grid-change-page-size-input" @bind="GridComponent.PageSize" @onkeyup="GridComponent.InputPageSizeKeyup" @onblur="GridComponent.InputPageSizeBlur" @onclick:stopPropagation />
            </div>
            <label class="@GridComponent.Grid.HtmlClass.FormLabel">@Strings.PageSizeItems</label>
        </div>
    }
</div>
