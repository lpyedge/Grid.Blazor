@using GridBlazor.Resources
@using GridBlazorClientSide.Shared.Models
@using GridShared.Columns
@inherits GridCreateComponent<Order>

@if (customers != null && employees != null && shipVias != null)
{
    <div class="@Program.HtmlClass.My100">
        <h1>@Strings.Add Order</h1>
    </div>

    <EditForm Model="@Item" OnValidSubmit="@CreateItem" class="@Program.HtmlClass.Mt100">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div>
            <div class="@(Program.HtmlClass.FormGroupRow)">
                <label for="OrderID" class="@Program.HtmlClass.FormLabel @(Program.HtmlClass.ColMd)2">OrderID: </label>
                <div class="@Program.HtmlClass.FormDivInput @(Program.HtmlClass.ColMd)5">
                    <InputNumber id="OrderID" class="@Program.HtmlClass.FormInput" readonly disabled @bind-Value="Item.OrderID" />
                </div>
            </div>

            <div class="@(Program.HtmlClass.FormGroupRow)">
                <label for="CustomerID" class="@Program.HtmlClass.FormLabel @(Program.HtmlClass.ColMd)2">Customer Id: </label>
                <div class="@Program.HtmlClass.FormDivInput @(Program.HtmlClass.ColMd)5">
                    <div class="@Program.HtmlClass.FormDivSelect">
                        <select id="CustomerID" name="CustomerID" class="@Program.HtmlClass.FormSelect" @bind="Item.CustomerID">
                            <option value="">@Strings.SelectItem</option>
                            @foreach (var selectItem in customers)
                            {
                                if (selectItem.Value == Item.CustomerID)
                                {
                                    <option value="@selectItem.Value" selected="selected">@selectItem.Title</option>
                                }
                                else
                                {
                                    <option value="@selectItem.Value">@selectItem.Title</option>
                                }
                            }
                        </select>
                    </div>
                </div>
            </div>

            <div class="@(Program.HtmlClass.FormGroupRow)">
                <label for="EmployeeID" class="@Program.HtmlClass.FormLabel @(Program.HtmlClass.ColMd)2">Employee Id: </label>
                <div class="@Program.HtmlClass.FormDivInput @(Program.HtmlClass.ColMd)5">
                    <div class="@Program.HtmlClass.FormDivSelect">
                        <select id="EmployeeID" name="EmployeeID" class="@Program.HtmlClass.FormSelect" @bind="Item.EmployeeID">
                            <option value="">@Strings.SelectItem</option>
                            @foreach (var selectItem in employees)
                            {
                                if (selectItem.Value == Item.EmployeeID.ToString())
                                {
                                    <option value="@selectItem.Value" selected="selected">@selectItem.Title</option>
                                }
                                else
                                {
                                    <option value="@selectItem.Value">@selectItem.Title</option>
                                }
                            }
                        </select>
                    </div>
                </div>
            </div>

            <div class="@(Program.HtmlClass.FormGroupRow)">
                <label for="ShipVia" class="@Program.HtmlClass.FormLabel @(Program.HtmlClass.ColMd)2">Ship Via: </label>
                <div class="@Program.HtmlClass.FormDivInput @(Program.HtmlClass.ColMd)5">
                    <div class="@Program.HtmlClass.FormDivSelect">
                        <select id="ShipVia" name="ShipVia" class="@Program.HtmlClass.FormSelect" @bind="Item.ShipVia">
                            <option value="">@Strings.SelectItem</option>
                            @foreach (var selectItem in shipVias)
                            {
                                if (selectItem.Value == Item.ShipVia.ToString())
                                {
                                    <option value="@selectItem.Value" selected="selected">@selectItem.Title</option>
                                }
                                else
                                {
                                    <option value="@selectItem.Value">@selectItem.Title</option>
                                }
                            }
                        </select>
                    </div>
                </div>
            </div>

            <div class="@(Program.HtmlClass.FormGroupRow)">
                <label for="RequiredDate" class="@Program.HtmlClass.FormLabel @(Program.HtmlClass.ColMd)2">Required Date: </label>
                <div class="@Program.HtmlClass.FormDivInput @(Program.HtmlClass.ColMd)5">
                    <InputDate id="RequiredDate" class="@Program.HtmlClass.FormInput" @bind-Value="Item.RequiredDate" />
                </div>
            </div>

            <div class="@(Program.HtmlClass.FormGroupRow)">
                <label for="ShippedDate" class="@Program.HtmlClass.FormLabel @(Program.HtmlClass.ColMd)2">Shipped Date: </label>
                <div class="@Program.HtmlClass.FormDivInput @(Program.HtmlClass.ColMd)5">
                    <InputDate id="ShippedDate" class="@Program.HtmlClass.FormInput" @bind-Value="Item.ShippedDate" />
                </div>
            </div>

            <div class="@(Program.HtmlClass.FormGroupRow)">
                <label for="ShipName" class="@Program.HtmlClass.FormLabel @(Program.HtmlClass.ColMd)2">Ship Name: </label>
                <div class="@Program.HtmlClass.FormDivInput @(Program.HtmlClass.ColMd)5">
                    <InputText id="ShipName" class="@Program.HtmlClass.FormInput" @bind-Value="Item.ShipName" />
                </div>
            </div>

            <div class="@(Program.HtmlClass.FormGroupRow)">
                <label for="ShipAddress" class="@Program.HtmlClass.FormLabel @(Program.HtmlClass.ColMd)2">Ship Address: </label>
                <div class="@Program.HtmlClass.FormDivInput @(Program.HtmlClass.ColMd)5">
                    <InputText id="ShipAddress" class="@Program.HtmlClass.FormInput" @bind-Value="Item.ShipAddress" />
                </div>
            </div>

            <div class="@(Program.HtmlClass.FormGroupRow)">
                <label for="ShipCity" class="@Program.HtmlClass.FormLabel @(Program.HtmlClass.ColMd)2">Ship City: </label>
                <div class="@Program.HtmlClass.FormDivInput @(Program.HtmlClass.ColMd)5">
                    <InputText id="ShipCity" class="@Program.HtmlClass.FormInput" @bind-Value="Item.ShipCity" />
                </div>
            </div>

            <div class="@(Program.HtmlClass.FormGroupRow)">
                <label for="ShipPostalCode" class="@Program.HtmlClass.FormLabel @(Program.HtmlClass.ColMd)2">Ship Postal Code: </label>
                <div class="@Program.HtmlClass.FormDivInput @(Program.HtmlClass.ColMd)5">
                    <InputText id="ShipPostalCode" class="@Program.HtmlClass.FormInput" @bind-Value="Item.ShipPostalCode" />
                </div>
            </div>

            <div class="@(Program.HtmlClass.FormGroupRow)">
                <label for="ShipRegion" class="@Program.HtmlClass.FormLabel @(Program.HtmlClass.ColMd)2">Ship Region: </label>
                <div class="@Program.HtmlClass.FormDivInput @(Program.HtmlClass.ColMd)5">
                    <InputText id="ShipRegion" class="@Program.HtmlClass.FormInput" @bind-Value="Item.ShipRegion" />
                </div>
            </div>

            <div class="@(Program.HtmlClass.FormGroupRow)">
                <label for="ShipCountry" class="@Program.HtmlClass.FormLabel @(Program.HtmlClass.ColMd)2">Ship Country: </label>
                <div class="@Program.HtmlClass.FormDivInput @(Program.HtmlClass.ColMd)5">
                    <InputText id="ShipCountry" class="@Program.HtmlClass.FormInput" @bind-Value="Item.ShipCountry" />
                </div>
            </div>

            <div class="@(Program.HtmlClass.FormGroupRow)">
                <label for="Freight" class="@Program.HtmlClass.FormLabel @(Program.HtmlClass.ColMd)2">Freight: </label>
                <div class="@Program.HtmlClass.FormDivInput @(Program.HtmlClass.ColMd)5">
                    <input id="Freight" name="Freight" class="@Program.HtmlClass.FormInput" @bind="Item.Freight" />
                </div>
            </div>

            <div class="@(Program.HtmlClass.FormGroupRow)">
                <div class="@(Program.HtmlClass.ColMd)5">
                    <button type="submit" class="@Program.HtmlClass.ButtonPrimary">@Strings.Save</button>
                    <button type="button" class="@Program.HtmlClass.ButtonPrimary" @onclick="BackButtonClicked">@Strings.Back</button>
                </div>
            </div>
        </div>
    </EditForm>
}
else
{
    <p><em>Loading...</em></p>
}

@code
{
    private IEnumerable<SelectItem> customers;
    private IEnumerable<SelectItem> employees;
    private IEnumerable<SelectItem> shipVias;

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();

        var customerColumn = (IGridColumn<Order>)GridComponent.Grid.Columns.GetByName("CustomerID");
        var employeeColumn = (IGridColumn<Order>)GridComponent.Grid.Columns.GetByName("EmployeeID");
        var shipViaColumn = (IGridColumn<Order>)GridComponent.Grid.Columns.GetByName("ShipVia");

        customers = await customerColumn.SelectItemExpr(Item);
        employees = await employeeColumn.SelectItemExpr(Item);
        shipVias = shipViaColumn.SelectItems;
    }
}