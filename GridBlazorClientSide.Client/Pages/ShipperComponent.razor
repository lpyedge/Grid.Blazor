@using GridBlazor.Resources
@using GridBlazorClientSide.Shared.Models


<div class="@Program.HtmlClass.Mt100">
    <div class="@(Program.HtmlClass.FormGroupRow)">
        <label for="OrderID" class="@Program.HtmlClass.FormLabel @(Program.HtmlClass.ColMd)2">ShipperID: </label>
        <div class="@Program.HtmlClass.FormDivInput @(Program.HtmlClass.ColMd)5">
            <input id="ShipperID" class="@Program.HtmlClass.FormInput" readonly disabled value="@_shipper.ShipperID" />
        </div>
    </div>

    <div class="@(Program.HtmlClass.FormGroupRow)">
        <label for="RequiredDate" class="@Program.HtmlClass.FormLabel @(Program.HtmlClass.ColMd)2">CompanyName: </label>
        <div class="@Program.HtmlClass.FormDivInput @(Program.HtmlClass.ColMd)5">
            <input id="CompanyName" class="@Program.HtmlClass.FormInput" readonly disabled value="@_shipper.CompanyName" />
        </div>
    </div>

    <div class="@(Program.HtmlClass.FormGroupRow)">
        <label for="ShippedDate" class="@Program.HtmlClass.FormLabel @(Program.HtmlClass.ColMd)2">Phone: </label>
        <div class="@Program.HtmlClass.FormDivInput @(Program.HtmlClass.ColMd)5">
            <input id="Phone" class="@Program.HtmlClass.FormInput" readonly disabled value="@_shipper.Phone" />
        </div>
    </div>

    <div class="@(Program.HtmlClass.FormGroupRow)">
        <div class="@(Program.HtmlClass.ColMd)5">
            <button type="button" class="@Program.HtmlClass.ButtonPrimary" @onclick="BackButtonClicked">@Strings.Back</button>
        </div>
    </div>
</div>

@code
{
    private Shipper _shipper;

    [CascadingParameter(Name = "GridComponent")]
    protected GridComponent<Order> GridComponent { get; set; }

    [Parameter]
    public object Object { get; set; }

    protected override void OnParametersSet()
    {
        _shipper = (Shipper)Object;
    }

    protected async Task BackButtonClicked()
    {
        await GridComponent.Back();
    }
}
